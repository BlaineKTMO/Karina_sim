<?xml version="1.0"?> 
<launch>

  <!-- Set default world to "map1" -->
<arg name="world" default="map1" />

  <!-- Include empty world launch file and set world_name and use_sim_time arguments -->
<include file="$(find gazebo_ros)/launch/empty_world.launch">
<arg name="world_name" value="$(find karina_description)/worlds/$(arg world).world"/>
<arg name="use_sim_time" value="true"/>
</include>

    <!-- Publish a static transform between "map" and "odom" -->
  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 0 0 0 0 map odom 40" />

  <!-- Spawn the robot model in Gazebo using the "gazebo_ros" package -->
  <!-- The below rosrun command can also be used and the below node commented out to prevent having to restart gazebo when working on urdf 
       Running this command will spawn the robot in Gazebo any model already spawned in Gazebo needs to be deleted before spawining a new one-->
  <!--rosrun gazebo_ros spawn_model -file ~/karina/igvc_ws/src/igvc_simulation/karina_description/urdf/karina_description_3d.urdf -urdf -model karina_description_3d-->
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-file $(find karina_description)/urdf/karina_description_3d.urdf -urdf -model karina_description_3d"
    output="screen" />
    
    <!-- Publish a message to the "/calibrated" topic to indicate that the joints are calibrated -->
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />

    <!-- Set the "robot_description" parameter using the URDF file -->
  <arg
    name="model" />
  <param
    name="robot_description"
    textfile="$(find karina_description)/urdf/karina_description_3d.urdf" />
    
    <!-- Launch RViz with the configuration file "karina_3d.rviz" -->
  <node
    name="rviz"
    pkg="rviz"
    type="rviz"
    args="-d $(find karina_description)/config/karina_3d.rviz" />
    
    <!-- Publish the robot state (joint angles, etc.) to the "/robot_state_publisher" topic -->  
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher" />
    
    <!-- Publish the joint state to the "/joint_states" topic -->
  <node
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher" />

</launch>
